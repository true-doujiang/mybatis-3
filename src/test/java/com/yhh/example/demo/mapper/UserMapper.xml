<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2021 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yhh.example.demo.mapper.UserMapper">

<!--
    <parameterMap id="" type="">
        <parameter property=""></parameter>
    </parameterMap>
-->
    <resultMap id="userResultMap" type="com.yhh.example.demo.entity.User">
        <id property="id" column="id" jdbcType="INTEGER" />
        <result property="username" column="username" />

<!--        <association property="username"/>-->
<!--        <collection property="username"/>-->
<!--        <constructor><arg></arg></constructor>-->
<!--        <discriminator javaType="">-->
<!--            <case value=""></case>-->
<!--        </discriminator>-->
    </resultMap>

    <!-- 用户信息综合查询
         #{userCustom.sex}:取出包装对象中性别值
         使用resultType进行输出映射，只有查询出来的列名和pojo中的属性名一致，该列才可以映射成功。
    -->
    <select id="findUserList" parameterType="User"  resultType="User">
		SELECT * FROM USER where user.sex=#{user.sex} and user.username like '%${user.username}%'
	</select>


    <!--用户信息综合查询总数
        parameterType：指定输入类型和findUserList一样
        resultType：输出结果类型 。    查询出来的结果集只有一行且一列，可以使用简单类型进行输出映射。
     -->
    <select id="findUserCount" parameterType="User" resultType="int">
	   SELECT count(*) FROM USER where sex=#{user.sex} and username like '%${user.username}%'
	</select>



    <select id="findUserById" parameterType="int" resultType="user">
		SELECT * FROM USER WHERE id=#{value}
	</select>

    <select id="findUserByName" parameterType="String" resultType="user">
		SELECT * FROM USER WHERE username LIKE '%${value}%'
	</select>

    <!-- 返回新记录的主键: keyProperty="id" useGeneratedKeys="true" -->
    <insert id="insertUser" parameterType="user" >
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user(username,birthday,sex,address) value(#{username},#{birthday},#{sex},#{address})
    </insert>


    <delete id="deleteUser" parameterType="int">
		delete from user where id=#{id}
	</delete>


</mapper>